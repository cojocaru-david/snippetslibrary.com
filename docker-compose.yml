services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: snippets-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-snippets_library}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - snippets-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-snippets_library}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
      args:
        - BUILDTIME_DATABASE_URL=postgresql://dummy:dummy@localhost:5432/dummy
    image: snippets-library:latest
    container_name: snippets-app
    restart: unless-stopped
    ports:
      - "${APP_PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-snippets_library}
      - AUTH_URL=${AUTH_URL:-http://localhost:3000}
      - AUTH_SECRET=${AUTH_SECRET:?AUTH_SECRET environment variable is required}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL:-http://localhost:3000}
      - NEXT_PUBLIC_BASE_URL=${NEXT_PUBLIC_BASE_URL:-http://localhost:3000}
    depends_on:
      postgres:
        condition: service_healthy
      migration:
        condition: service_completed_successfully
    networks:
      - snippets-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Database Migration Service (run once on startup)
  migration:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    image: snippets-library:migration
    container_name: snippets-migration
    user: root
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-snippets_library}
      - NODE_ENV=production
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - snippets-network
    command: >
      sh -c "
        echo 'Waiting for database to be ready...' &&
        sleep 5 &&
        echo 'Running database migrations...' &&
        npm run migrate &&
        echo 'Migration completed successfully!'
      "
    restart: "no"

volumes:
  postgres_data:
    driver: local

networks:
  snippets-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
